package classes.asset.check{	import flash.display.DisplayObject;	import flash.display.DisplayObjectContainer;	import flash.display.Loader;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.ColorTransform;	import flash.geom.Rectangle;	import flash.geom.Transform;	import flash.media.StageWebView;	import flash.net.URLRequest;	import flash.text.TextField;	import flash.utils.getDefinitionByName;	
		public class CheckPannel extends Sprite	{		public var _tex:TextField;		public var pannelBG:MovieClip;		private var loader:Loader;		private var _language:String;		private var webView:StageWebView;		private var countryMc:MovieClip;				public function CheckPannel(str:MovieClip, land:String, lng:String)		{			super();			_language = lng;			_tex.mouseEnabled = false;			Init(str, land);			this.addEventListener(Event.REMOVED_FROM_STAGE, rFSH, false, 0, true);		}				protected function mDown(event:MouseEvent):void
		{
			event.target.removeEventListener(MouseEvent.MOUSE_DOWN, mDown);			event.target.addEventListener(MouseEvent.MOUSE_OUT, mOut, false, 0, true);			event.target.addEventListener(MouseEvent.MOUSE_UP, mUp, false, 0, true);			colorChange(pannelBG, 20, 142, 173);
		}		
		protected function mUp(event:MouseEvent):void
		{
			event.target.removeEventListener(MouseEvent.MOUSE_UP, mUp);			event.target.removeEventListener(MouseEvent.MOUSE_OUT, mOut);			event.target.addEventListener(MouseEvent.MOUSE_DOWN, mDown, false, 0, true);			colorChange(pannelBG, 51, 51, 51);
		}
				protected function mOut(event:MouseEvent):void
		{
			event.target.removeEventListener(MouseEvent.MOUSE_OUT, mOut);			event.target.removeEventListener(MouseEvent.MOUSE_UP, mUp);			event.target.addEventListener(MouseEvent.MOUSE_DOWN, mDown, false, 0, true);			colorChange(pannelBG, 51, 51, 51);
		}				private function colorChange(m:MovieClip, red:uint, green:uint, blue:uint):void		{			var col:ColorTransform = new ColorTransform(0, 0, 0, 1, red, green, blue, 1);			m.transform.colorTransform = col;		}				protected function clickHand(event:MouseEvent):void
		{			webView = new StageWebView();
			webView.stage = this.stage;			webView.viewPort = new Rectangle( 0, 30, stage.stageWidth, stage.stageHeight -30 );			var url:String;			var url2:String;			switch(_language){				case "English":					url = "http://en.wikipedia.org/wiki/";					url2 = url.concat(countryMc._en);					break;				case "Japanease":					url = "http://ja.wikipedia.org/wiki/";					url2 = url.concat(countryMc._ja);					break;				default:					url = "http://en.wikipedia.org/wiki/";					url2 = url.concat(countryMc._en);					break;			}			webView.loadURL(url2);			CheckView(parent).webview = webView;
		}				protected function rFSH(event:Event):void		{			this.removeEventListener(Event.REMOVED_FROM_STAGE, rFSH);			while(numChildren > 0){				var display:DisplayObject = getChildAt(0);				removeChild(display);				display = null;			}		}				private function Init(str:MovieClip, land:String):void		{			countryMc = str;			SetImage(str.name, land);			SetCountry(str);			SetText(str._en, str._ja);		}				public function SetImage(str:String, land:String):void{			var url:String = "data/nation_flag/"+String(land)+"/"+String(str)+".gif";			var urlreq:URLRequest = new URLRequest(url);			loader = new Loader();			loader.name = "myloader";			loader.load(urlreq);			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loadCompHandler, false, 0, true);									loader.addEventListener(MouseEvent.CLICK, clickHand, false, 0, true);			loader.addEventListener(MouseEvent.MOUSE_DOWN, mDown, false, 0, true);		}				private function loadCompHandler(evt:Event):void		{			var loadObj:Loader = evt.target.loader;			loadObj.contentLoaderInfo.removeEventListener(Event.COMPLETE, loadCompHandler);			loadObj.x = 10;			loadObj.scaleX = loadObj.scaleY = 0.6;			loadObj.y = (this.height - loadObj.height) / 2;			addChild(loadObj);		}				public function SetCountry(str:MovieClip):void{			var rnd:MovieClip = new MovieClip();			rnd = str;			rnd.x = 90;			rnd.y = (85-40)/2;			var leng:Number = Math.max(str.width, str.height);			var size:Number = (40/leng);			rnd.scaleX = rnd.scaleY = size;			rnd.x += (40 - rnd.width) / 2;			rnd.y += (40 - rnd.height) / 2;						var colortransform = new ColorTransform(0, 0, 0, 1, 67, 154, 34, 1);			rnd.transform.colorTransform = colortransform;						addChild(rnd);		}				public function SetText(en:String, ja:String):void{			switch(_language){				case "English":					_tex.text = en;					break;				case "Japanease":					_tex.text = ja;					break;				default:					_tex.text = en;					break;			}		}	}}