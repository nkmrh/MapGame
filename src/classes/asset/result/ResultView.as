package asset.result{	import classes.asset.SimpleButton;		import flash.display.DisplayObject;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.media.Sound;	import flash.net.URLRequest;	import flash.text.TextField;	import flash.text.TextFormat;		import org.libspark.betweenas3.BetweenAS3;	import org.libspark.betweenas3.easing.*;	import org.libspark.betweenas3.events.TweenEvent;	import org.libspark.betweenas3.tweens.IObjectTween;	import org.libspark.betweenas3.tweens.ITween;
			public class ResultView extends Sprite	{		public var _state:TextField;		public var _tex:TextField;		public var _hitex:TextField;		public var _back:MovieClip;				private var _retryButton:SimpleButton;		private var _returnButton:SimpleButton;		private var t:ITween;						public function ResultView(score:uint=0, hi:Number=0, flag:Boolean=false)		{			super();			this.addEventListener(Event.REMOVED_FROM_STAGE, rFSH, false, 0, true);						_state.alpha = 0;			_tex.alpha = 0;			_hitex.alpha = 0;			_back.alpha = 0;						var texFormat0:TextFormat;			if(flag){				soundResult(true);				_state.text = "CLEAR!!";				texFormat0 = new TextFormat("_sans", 70, 0x00CCFF, true);							}else{				soundResult(false);				_state.text = "TIME UP";				texFormat0 = new TextFormat("_sans", 60, 0xFF6666, true);							}			_state.setTextFormat(texFormat0);						var texFormat1:TextFormat = new TextFormat("_sans", 40, 0xFFCC00, true);			var texFormat2:TextFormat = new TextFormat("_sans", 30, 0xFF6633, true);						_tex.text = "Score : " + score;			_tex.setTextFormat(texFormat1);			_hitex.text = "High Score : " + String(hi);			_hitex.setTextFormat(texFormat2);						_retryButton = new SimpleButton("Retry", null, 0.49, 0.69);			_retryButton.name = "_retryButton";			_retryButton.x = (320 - _retryButton.width) / 2 ;			_retryButton.y = 240;			_retryButton.alpha = 0;			_retryButton.mouseChildren = false;			_retryButton.mouseEnabled = false;			addChild(_retryButton);						_returnButton = new SimpleButton("Home", null, 0.49, 0.69);			_returnButton.name = "_returnButton";			_returnButton.x = (320 - _returnButton.width) / 2 ;			_returnButton.y = 290;			_returnButton.alpha = 0;			_returnButton.mouseChildren = false;			_returnButton.mouseEnabled = false;			addChild(_returnButton);						start();		}				public function hide():void{			checkTween();			t = BetweenAS3.to(this, {alpha:0}, 0.2);			t.addEventListener(TweenEvent.COMPLETE, hideCompHandler, false, 0, true);			t.play();		}				private function hideCompHandler(evt:TweenEvent):void{			evt.target.removeEventListener(TweenEvent.COMPLETE, hideCompHandler);			evt.target.stop();			this.dispatchEvent(new Event("resultViewHide"));		}				private function start():void
		{			checkTween();
			t = BetweenAS3.serial(				BetweenAS3.to(_state, {alpha:1}, 0.5),				BetweenAS3.to(_back, {alpha:1}, 0.2),				BetweenAS3.to(_tex, {alpha:1}, 0.2),				BetweenAS3.to(_hitex, {alpha:1}, 0.2),				BetweenAS3.parallel(					BetweenAS3.to(_retryButton, {alpha:1}, 0.2),					BetweenAS3.to(_returnButton, {alpha:1}, 0.2)					)				);			t.addEventListener(TweenEvent.COMPLETE, compHandler, false, 0, true);			t.play();
		}				private function compHandler(evt:TweenEvent):void{			evt.target.removeEventListener(TweenEvent.COMPLETE, compHandler);			evt.target.stop();						_retryButton.mouseChildren = true;			_retryButton.mouseEnabled = true;			_returnButton.mouseChildren = true;			_returnButton.mouseEnabled = true;		}				private function checkTween():void{			if(t!=null){				t.stop();				t = null;			}		}				private function soundResult(param0:Boolean):void
		{
			var snd:Sound = new Sound();			if(param0){				snd.load(new URLRequest("/data/sound/clear.mp3"));			}else{				snd.load(new URLRequest("/data/sound/timeup.mp3"));			}			snd.play();
		}								protected function rFSH(event:Event):void		{			this.removeEventListener(Event.REMOVED_FROM_STAGE, rFSH);			while(numChildren > 0){				var display:DisplayObject = getChildAt(0);				//trace(display);				removeChild(display);				display = null;			}		}			}}